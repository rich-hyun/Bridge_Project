// scripts/gen-config.mjs  
import fs from 'fs';
import path from 'path';
import dotenv from 'dotenv';

dotenv.config();

const toHex = (n) => '0x' + (parseInt(String(n || '0'), 10) || 0).toString(16);

const cfg = {
  networks: {
    JKK: {
      chainIdHex: toHex(process.env.JKK_CHAIN_ID || 7706),
      name: 'JKK-Net',
      rpcUrl: process.env.JKK_RPC_URL || ''
    },
    TMZ: {
      chainIdHex: toHex(process.env.TMZ_CHAIN_ID || 7707),
      name: 'JKK-TMZ',
      rpcUrl: process.env.TMZ_RPC_URL || ''
    }
  },
  contracts: {
    token: {
      JKK2: process.env.JKK_TOKEN_ADDRESS || '',
      TMZ2: process.env.TMZ_TOKEN_ADDRESS || ''
    },
    bridge: {
      JKK: process.env.JKK_BRIDGE_ADDRESS || '',
      TMZ: process.env.TMZ_BRIDGE_ADDRESS || ''
    },
    staking: process.env.STAKING_ADDRESS || '',
    swap: process.env.SWAP_ADDRESS || ''
  },
  roles: {
    MINTER_ROLE_HASH: process.env.MINTER_ROLE_HASH ||
      '0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6'
  }
};

const outPath = path.join(process.cwd(), 'config.js');
fs.writeFileSync(
  outPath,
  `// generated by scripts/gen-config.mjs - DO NOT COMMIT\nwindow.APP_CONFIG = ${JSON.stringify(cfg, null, 2)};\n`
);
console.log('âœ” wrote', outPath);
